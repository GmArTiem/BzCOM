<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LoginImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>